<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
    "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">

<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	template="templates/template.xhtml">


	<!--  author llew -->

	<ui:define name="pageTitle">Register an account</ui:define>
	<ui:define name="content">

		<div id="title">
			<h2>Register</h2>
		</div>
		<div id="registerForm">
				<h:form style="display:inline; padding-left=10%">
					Username : <h:inputText id="username" value="#{registrationDetails.username}" required="true" 
					validatorMessage="Username must be between 5 and 25 characters, no special characters">
					<f:validateRegex pattern="([0-9a-zA-Z]+.{5,25})"/></h:inputText><br/>
					<br/>
					<br/>
					First Name : <h:inputText if="fName" value="#{registrationDetails.fName}" required="true" 
					validatorMessage="First name must be between 1 and 20 characters, no digits or special characters">
					<f:validateRegex pattern="([a-zA-Z]+.{1,20})"/></h:inputText><br/>
					<br/>
					<br/>
					Last Name : <h:inputText value="#{registrationDetails.lName}" required="true" 
					validatorMessage="Last name must be between 1 and 45 characters, no digits or special characters">
					<f:validateRegex pattern="([a-zA-Z]+.{1,45})"/></h:inputText><br/>
					<br/>
					<br/>
					Email : <h:inputText value="#{registrationDetails.email}" required="true" 
					validatorMessage="Email address must be between 6 and 254 characters, must contain @, no digits or special characters">
					<f:validateRegex pattern="((?=.*[@])[0-9a-zA-Z]+.{6,254})"/></h:inputText><br/>
					<br/>
					<br/>
					Contact Number : <h:inputText value="#{registrationDetails.contactNumber}" required="true" 
					validatorMessage="Contact number must be between 1 and 45 characters, digits only">
					<f:validateRegex pattern="([0-9]+.{1,45})"/></h:inputText><br/>
					<br/>
					<br/>
					Password : <h:inputSecret binding="#{passwordComponent}" id="pwd" type="password" value="#{registrationDetails.password}" 
					required="true" requiredMessage="Enter Password" 
					validatorMessage="Password must be between 5 and 160 characters, must contain at least 1 digit as well as upper and lower case characters">
					<f:validateRegex pattern="((?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{5,160})"/></h:inputSecret><br/>
					<br/>
					<br/>
					Password Confirmation : <h:inputSecret id="confirm" type="password" value="#{registrationDetails.confirmPassword}" 
					required="#{not empty passwordComponent.value}" validator="#{registrationDetails.validatePassword}"
					validatorMessage="Password must be between 5 and 160 characters, must contain at least 1 digit as well as upper and lower case characters">
					<f:attribute name="passwordComponent" value="#{passwordComponent}"/>
					<f:validateRegex pattern="((?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{5,160})"/></h:inputSecret><br/>
					<br/>
					<br/>
					<h2>Address</h2>
					Address Label : <h:inputText value="#{registrationDetails.addressLabel}" required="true" 
					validatorMessage="Address label must be between 1 and 45 characters, no digits or special characters">
					<f:validateRegex pattern="([a-zA-Z]+.{1,45})"/></h:inputText><br/>
					<br/>
					<br/>
					Home Number : <h:inputText value="#{registrationDetails.addressLine1}" required="true" 
					validatorMessage="House number must be a digit between 1 and 9999">
					<f:validateLongRange minimum="1" maximum="9999"/></h:inputText><br/>
					<br/>
					<br/>
					Street : <h:inputText value="#{registrationDetails.addressLine2}" required="true" 
					validatorMessage="Street must be between 2 and 45 characters, no digits or special characters">
					<f:validateRegex pattern="([a-zA-Z]+.{2,45})"/></h:inputText><br/>
					<br/>
					<br/>
					City : <h:inputText value="#{registrationDetails.city}" required="true" 
					validatorMessage="City must be between 2 and 45 characters, no digits or special characters">
					<f:validateRegex pattern="([a-zA-Z]+.{2,45})"/></h:inputText><br/>
					<br />
					<br />
					County : <h:inputText value="#{registrationDetails.county}" required="true" 
					validatorMessage="County must be between 2 and 45 characters, no digits or special characters">
					<f:validateRegex pattern="([a-zA-Z]+.{2,45})"/></h:inputText><br/>
					<br />
					<br />
					Post Code : <h:inputText value="#{registrationDetails.postcode}" required="true" 
					validatorMessage="Postcode must be between 6 and 8 characters, no special characters">
					<f:validateRegex pattern="([0-9a-zA-Z]+.{5,8})"/></h:inputText><br/>
					<br />
					<br />
					Is Billing Address? : <h:selectBooleanCheckbox type="checkbox" value="#{registrationDetails.billingAddress}"/>
					<br />
					<br />
					<h2>Payment Method</h2>
										
					Card Type : <h:selectOneMenu value="#{registrationDetails.cardType}">
    				<f:selectItems value="#{registrationDetailsController.enumValues}"/>
					</h:selectOneMenu>
					<br />
					<br />
					Name on Card : <h:inputText value="#{registrationDetails.nameOnCard}" required="true" 
					validatorMessage="Name on card must be between 2 and 45 characters, no digits or special characters">
					<f:validateRegex pattern="([a-zA-Z]+.{2,45})"/></h:inputText><br/>
					<br />
					<br />
					Card Number : <h:inputText value="#{registrationDetails.cardNumber}" required="true" 
					validatorMessage="Card number must be 16 digits long">
					<f:validateLongRange minimum="0" maximum="9999999999999999"/>
					<f:validateLength minimum="16" maximum="16"/></h:inputText><br/>
					<br />
					<br />
					Expiry Date : <h:inputText value="#{registrationDetails.expiryDate}" required="true"
					validatorMessage="Expiry date must be between 6 and 10 characters and must contain /">
					<f:validateRegex pattern="((?=.*\d)(?=.*[/]).{6,10})"/></h:inputText><br/>
					<br />
					<br />
					<h:commandButton value="Submit"
						action="#{registrationDetailsController.registerCustomer}"/>
				</h:form>
		</div>
	</ui:define>
</ui:composition>
